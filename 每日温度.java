class Solution {
    //这道题还是比较简单的，我们很容易想到使用两层for循环，外层循环用来比哪里生成结果数组的所有元素，内层for循环就用来比较，
    //比较时，只要大于外层循环对应索引的数，我们就计算索引之差，然后存入结果数组，如果一直没有大于指定元素的元素，我们就使用默认值，
    //也就是在外层循环中定义一个变量default，默认值是0。
    //又是一个为数不多的完全自己想出来写出来的算法！
    public int[] dailyTemperatures(int[] T) {
        //定义一个结果数组
        int[] ans = new int[T.length];
        //定义一种恒定情况，最后一天的等待天数肯定为0
        ans[T.length - 1] = 0;
        //遍历生成结果数组
        for(int i = 0; i < T.length - 1; i++){
            //设置标志，来判断是否有大于本元素的元素
            int flag = 0;
            for(int j = i + 1; j < T.length; j++){
                if(T[i] < T[j]){
                    //如果大于就统计索引之差
                    ans[i] = j - i;
                    //更改flag，跳出循环后避免再用默认值覆盖这个生计算出来的正确值
                    flag = 1;
                    //必须立马跳出循环，否则正确结果将会被覆盖掉
                    break;
                }
            }
            //如果找完都没有发现大于本元素的元素，就设置为默认值
            if(flag == 0){//等于0说明没有在里层循环被改变
                ans[i] = 0;
            }
        }

        return ans;
    }
}